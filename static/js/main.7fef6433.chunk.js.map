{"version":3,"sources":["tooltipshow.js","App.js","reportWebVitals.js","index.js"],"names":["StyledTableCell","styled","TableCell","theme","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","TableRow","action","hover","border","Tooltipshow","props","row","useState","open","setopen","component","scope","Avatar","src","avatar","alt","align","id","email","first_name","last_name","ClickAwayListener","onClickAway","Tooltip","arrow","title","List","ListItem","button","onClick","setdialogopen","setfirstname","setlastname","setupdatestatus","setuserid","setdeletestatus","Button","App","users","setUsers","loading","setloading","rowspage","setrowspage","snackopen","setsnackopen","message","setmessage","messagetype","setmessagetype","dialogopen","firstname","lastname","updatestatus","deletestatus","userid","userperpage","u","axios","get","then","response","status","setTimeout","data","catch","err","handleopenclose","useEffect","rows","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","style","width","display","justifyContent","marginBottom","marginTop","Add","Dialog","DialogTitle","DialogContent","DialogContentText","Typography","TextField","autoFocus","fullWidth","value","onChange","e","target","DialogActions","put","res","patch","post","disabled","TableContainer","Paper","Table","sx","minWidth","TableHead","TableBody","colSpan","type","height","map","TableFooter","TablePagination","rowsPerPageOptions","count","length","rowsPerPage","SelectProps","inputProps","native","onRowsPerPageChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fef6433.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Avatar, ClickAwayListener } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Button from '@mui/material/Button';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  '&:last-child td, &:last-child th': {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nconst Tooltipshow = (props) => {\r\n  const { row } = props;\r\n  const [open, setopen] = useState(false);\r\n  return (\r\n    <StyledTableRow key={row.id}>\r\n      <StyledTableCell component=\"th\" scope=\"row\">\r\n        <Avatar src={row.avatar} alt=\"avatar\" />\r\n      </StyledTableCell>\r\n      <StyledTableCell align=\"center\">{row.id}</StyledTableCell>\r\n      <StyledTableCell align=\"center\">{row.email}</StyledTableCell>\r\n      <StyledTableCell align=\"center\">{row.first_name}</StyledTableCell>\r\n      <StyledTableCell align=\"center\">{row.last_name}</StyledTableCell>\r\n      <StyledTableCell align=\"right\">\r\n        <ClickAwayListener onClickAway={() => setopen(false)}>\r\n          <Tooltip\r\n            open={open}\r\n            arrow\r\n            title={\r\n              <List>\r\n                <ListItem\r\n                  button\r\n                  onClick={() => {\r\n                    props.setdialogopen(true);\r\n                    props.setfirstname(row.first_name);\r\n                    props.setlastname(row.last_name);\r\n                    props.setupdatestatus(true);\r\n                    props.setuserid(row.id);\r\n                  }}\r\n                >\r\n                  Update\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  onClick={() => {\r\n                    props.setdialogopen(true);\r\n                    props.setdeletestatus(true);\r\n                    props.setuserid(row.id);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </ListItem>\r\n              </List>\r\n            }\r\n          >\r\n            <Button onClick={() => setopen(!open)}>Action</Button>\r\n          </Tooltip>\r\n        </ClickAwayListener>\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default Tooltipshow;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Tooltipshow from './tooltipshow';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Snackbar,\r\n  TableFooter,\r\n  TablePagination,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Loader from 'react-loader-spinner';\r\nimport { Add } from '@mui/icons-material';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [rowspage, setrowspage] = useState(5);\r\n  const [snackopen, setsnackopen] = useState(false);\r\n  const [message, setmessage] = useState('');\r\n  const [messagetype, setmessagetype] = useState('success');\r\n  const [dialogopen, setdialogopen] = useState(false);\r\n  const [firstname, setfirstname] = useState('');\r\n  const [lastname, setlastname] = useState('');\r\n  const [updatestatus, setupdatestatus] = useState(false);\r\n  const [deletestatus, setdeletestatus] = useState(false);\r\n  const [userid, setuserid] = useState();\r\n  const userperpage = (u) => {\r\n    axios\r\n      .get('https://reqres.in/api/users?per_page=' + u)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          setloading(true);\r\n          setTimeout(() => {\r\n            setloading(false);\r\n          }, 1000);\r\n          setUsers(response.data.data);\r\n        }\r\n      })\r\n      .catch((err) => {});\r\n  };\r\n\r\n  const adduserfn = () => {\r\n    axios\r\n      .post('https://reqres.in/api/users', {\r\n        first_name: firstname,\r\n        last_name: lastname,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 201) {\r\n          handleopenclose();\r\n          setloading(true);\r\n          setTimeout(() => {\r\n            setloading(false);\r\n          }, 1000);\r\n          setsnackopen(true);\r\n          setmessage('User added successfully');\r\n          setmessagetype('success');\r\n          setTimeout(() => {\r\n            setsnackopen(false);\r\n          }, 2000);\r\n        }\r\n      });\r\n  };\r\n  const updateuserfn = () => {\r\n    axios\r\n      .put('https://reqres.in/api/users/' + userid, {\r\n        first_name: firstname,\r\n        last_name: lastname,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          handleopenclose();\r\n          setloading(true);\r\n          setTimeout(() => {\r\n            setloading(false);\r\n          }, 1000);\r\n          setsnackopen(true);\r\n          setmessage('Record updated successfully');\r\n          setmessagetype('success');\r\n          setTimeout(() => {\r\n            setsnackopen(false);\r\n          }, 2000);\r\n        }\r\n      });\r\n  };\r\n  const deleteuserfn = () => {\r\n    axios.patch('https://reqres.in/api/users/' + userid).then((res) => {\r\n      if (res.status === 200) {\r\n        handleopenclose();\r\n        setloading(true);\r\n        setTimeout(() => {\r\n          setloading(false);\r\n        }, 1000);\r\n        setsnackopen(true);\r\n        setmessage('Record deleted successfully');\r\n        setmessagetype('error');\r\n        setTimeout(() => {\r\n          setsnackopen(false);\r\n        }, 2000);\r\n      }\r\n    });\r\n  };\r\n  const handleopenclose = () => {\r\n    setdialogopen(false);\r\n    setfirstname('');\r\n    setlastname('');\r\n    setupdatestatus(false);\r\n    setdeletestatus(false);\r\n    setuserid(null);\r\n  };\r\n  useEffect(() => {\r\n    userperpage(5);\r\n  }, []);\r\n  const rows = users;\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        open={snackopen}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        autoHideDuration={2000}\r\n        onClose\r\n      >\r\n        <Alert severity={messagetype}>{message}</Alert>\r\n      </Snackbar>\r\n      <div style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\r\n        <Button\r\n          style={{ marginBottom: 10, marginTop: 5 }}\r\n          onClick={() => setdialogopen(!dialogopen)}\r\n        >\r\n          <Add />\r\n          Add User\r\n        </Button>\r\n      </div>\r\n      <Dialog\r\n        open={dialogopen}\r\n        onClose={handleopenclose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {updatestatus ? 'Update ' : deletestatus ? 'Delete ' : 'Add'} User\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {deletestatus ? (\r\n              <Typography>\r\n                Are you sure you want to delete this record?\r\n              </Typography>\r\n            ) : (\r\n              <>\r\n                <Typography>\r\n                  First Name <span style={{ color: 'red' }}>*</span>\r\n                </Typography>\r\n                <TextField\r\n                  autoFocus\r\n                  fullWidth\r\n                  value={firstname}\r\n                  onChange={(e) => setfirstname(e.target.value)}\r\n                />\r\n                <Typography>\r\n                  Last Name <span style={{ color: 'red' }}>*</span>\r\n                </Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  value={lastname}\r\n                  onChange={(e) => setlastname(e.target.value)}\r\n                />\r\n              </>\r\n            )}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions style={{ justifyContent: 'space-between' }}>\r\n          <Button onClick={handleopenclose}>Cancel</Button>\r\n          <Button\r\n            onClick={\r\n              updatestatus\r\n                ? updateuserfn\r\n                : deletestatus\r\n                ? deleteuserfn\r\n                : adduserfn\r\n            }\r\n            disabled={deletestatus ? false : !firstname || !lastname}\r\n          >\r\n            {updatestatus ? 'Update' : deletestatus ? 'Delete' : 'Add'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell></StyledTableCell>\r\n              <StyledTableCell align=\"center\">Id</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Email Id</StyledTableCell>\r\n              <StyledTableCell align=\"center\">First Name</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Last Name</StyledTableCell>\r\n              <StyledTableCell align=\"right\">Action</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {loading ? (\r\n              <TableCell colSpan={7} align=\"center\">\r\n                <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n              </TableCell>\r\n            ) : (\r\n              rows.map((row) => (\r\n                <Tooltipshow\r\n                  row={row}\r\n                  setuserid={setuserid}\r\n                  setupdatestatus={setupdatestatus}\r\n                  setdialogopen={setdialogopen}\r\n                  setfirstname={setfirstname}\r\n                  setlastname={setlastname}\r\n                  setdeletestatus={setdeletestatus}\r\n                />\r\n              ))\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10]}\r\n                count={users.length}\r\n                rowsPerPage={rowspage}\r\n                SelectProps={{\r\n                  inputProps: {\r\n                    'aria-label': 'rows per page',\r\n                  },\r\n                  native: true,\r\n                }}\r\n                onRowsPerPageChange={(e) => {\r\n                  setrowspage(e.target.value);\r\n                  userperpage(e.target.value);\r\n                }}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}